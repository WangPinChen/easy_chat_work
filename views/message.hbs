<style>
  h1 {
    font-size: 1.2rem;
  }

  .title-container {
    padding: 0.5rem;
    border-bottom: 1px solid #cfdae3;
    width: 100%;
    display: flex;
    align-items: center;
  }

  .title-container i {
    font-size: 1.2rem;
    margin-right: 0.5rem;
  }

  .body-container {
    display: flex;
  }

  main {
    display: flex;
    width: 100%;
    margin-left: 160px;
    border-left: 1px solid #cfdae3;
    border-right: 1px solid #cfdae3;
  }

  .online-user-container {
    width: 30%;
    border-right: 1px solid #cfdae3;
    height: 100vh;
    overflow-y: auto;
  }

  .online-user-container .card {
    width: 100%;
    display: flex;
    padding: 0.5rem 0;
    border-bottom: 4px solid #018ffd;
  }

  .online-user-container .avatar-container {
    width: 30%;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .online-user-container .avatar-container a {
    display: flex;
    justify-content: center;
  }

  .online-user-container .avatar-container img {
    width: 90%;
    aspect-ratio: 1/1;
    object-fit: cover;
    border-radius: 15px;
  }

  .online-user-container .name-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    flex: 1;
    white-space: nowrap;
    overflow: hidden;
    margin-right: 0.2rem;
  }

  .online-user-container .name-container .name {
    font-size: 1rem;
    color: black;
  }

  .online-user-container .name-container .account {
    color: #83898e;
  }

  .online-user-container .chat-link {
    display: flex;
    align-items: center;
    margin-right: 0.25rem;
  }

  .online-user-container .chat-link i {
    font-size: 2rem;
    color: #018ffd;
  }

  .chat-container {
    width: 100%;
    display: flex;
    flex-direction: column;
    height: 100vh;
    overflow: hidden;
  }

  .chat-container .chat-message-group {
    flex: 1;
    overflow-y: scroll;
    padding: 0.25rem 0;
  }

  .chat-container .chat-message-left,
  .chat-container .chat-message-right,
  .chat-container .system_message {
    width: 100%;
  }

  .chat-container .system_message {
    margin: 0.25rem auto;
    display: flex;
    justify-content: center;
    padding: 0 3rem;
  }

  .chat-container .system_message p {
    display: inline;
  }

  .chat-container .chat-message-left {
    display: flex;
    align-items: start;
  }

  .chat-container .chat-message-left .avatar-container {
    width: 55px;
    aspect-ratio: 1/1;
    display: flex;
    justify-content: center;
    align-items: center;
    background: linear-gradient(to bottom right, #018ffd, white);
    border-radius: 15%;
    margin: 0.125rem;
  }

  .chat-container .chat-message-left .avatar-container img {
    width: 90%;
    aspect-ratio: 1/1;
    object-fit: cover;
    border-radius: 15%;
    border: 2px solid white;
  }

  .chat-container .chat-message-left .messages {
    max-width: 40%;
    overflow-wrap: break-word;
  }

  .chat-container .chat-message-left .nameMessage {
    margin-top: 0.75rem;
    margin-left: 0.5rem;
    background-color: rgb(1, 143, 253, 0.3);
    padding: 0 1rem 0.5rem 1rem;
    border-radius: 0 15px 15px 15px;
  }

  .chat-container .chat-message-left .name {
    overflow-wrap: break-word;
    font-size: 1rem;
    color: white;
  }

  .chat-container .chat-message-right {
    display: flex;
    justify-content: end;
  }

  .chat-container .chat-message-right .messages {
    max-width: 40%;
  }

  .chat-container .chat-message-right .message {
    margin-top: 0.75rem;
    margin-right: 0.5rem;
    background-color: rgb(1, 143, 253, 0.3);
    border-radius: 15px 15px 0 15px;
    padding: 0.5rem 1rem;
    overflow-wrap: break-word;
  }

  .input-container {
    border-top: 1px solid #cfdae3;
    width: 100%;
    padding: 1rem;
  }

  .input-container textarea {
    width: 100%;
    font-size: 1.25rem;
    resize: none;
  }

  @media screen and (max-width:1280px) {
    main {
      margin-left: 82px;
    }

  }

  @media screen and (max-width:768px) {
    main {
      margin: 0 auto;
    }

    .title-container {
      justify-content: center;
    }

    .online-user-container .title-container i {
      font-size: 1.75rem;
    }

    .online-user-container .title-container h1 {
      display: none;
    }

    .online-user-container .card {
      position: relative;
    }

    .online-user-container .avatar-container {
      width: 100%;
    }

    .online-user-container .chat-link {
      position: absolute;
      top: 0;
      right: 0;
    }

    .online-user-container .chat-link i {
      color: rgb(1, 143, 253, 0.75);
      text-shadow: 0px 4px 6px rgba(0, 0, 0, 0.8);
      padding: 0.5rem;
      border-radius: 15px;
    }

    .online-user-container .chat-link i:hover {
      color: rgb(1, 143, 253, 0.85);
      background-color: rgb(131, 137, 142, 0.25);
    }

    .chat-container .chat-message-right .messages,
    .chat-container .chat-message-left .messages {
      max-width: 60%;
    }

  }
</style>

<div class="body-container">
  {{> sidebar}}
  <main>
    <div class="online-user-container">
      <div class="title-container">
        <i class="fa-solid fa-users"></i>
        <h1>在線使用者</h1>
      </div>
      <div class="card-group">
        {{!-- 上線使用者產生處 --}}

        {{!-- render-sample↓ --}}
        {{!-- <div class="card user-id-${msgObj.user.id}">
          <div class="avatar-container">
            <img class="avatar" src="https://i.imgur.com/5hbLSJb.jpeg" alt="">
          </div>
          <div class="name-container">
            <a href="/user/${msgObj.user.id}" class="name">托尼史塔克</a>
            <p class="account">@tony_stark</p>
          </div>
          <div class="chat-link">
            <a href="/message/9999">
              <i class="fa-solid fa-message"></i>
            </a>
          </div>
        </div> --}}

        {{!-- 透過handlebars產生已上線者 --}}
        {{#each onlineUsers}}
        <div class="card user-id-{{this.id}}">
          <div class="avatar-container">
            <a href="/user/{{this.id}}">
              <img class="avatar" src="{{this.avatar}}" alt="">
            </a>
          </div>
          <div class="name-container">
            <a href="/user/{{this.id}}" class="name">{{this.name}}</a>
            <p class="account">@{{this.account}}</p>
          </div>
          <div class="chat-link">
            <a href="/message/private/{{this.id}}">
              <i class="fa-solid fa-message"></i>
            </a>
          </div>
        </div>
        {{/each}}
      </div>
    </div>

    <div class="chat-container">
      <div class="title-container">
        <h1>公開聊天室</h1>
      </div>
      <div class="chat-message-group">
        {{!-- 訊息產生處 --}}

        {{!-- render sample --}}
        {{!-- <div class="system_message">
          <p>system_message</p>
        </div> --}}
      </div>
      <div class="input-container">
        <textarea rows="1"></textarea>
      </div>
    </div>

  </main>
</div>

<script>
  (async () => {
    const socket = io()
    const input = document.querySelector('.input-container textarea')
    const chatMessageGroup = document.querySelector('.chat-message-group')
    const currentUserRes = await axios.get('api/user')
    const currentUser = currentUserRes.data.user

    function reHeightMain() {
      const userContainer = document.querySelector('.online-user-container')
      const chatContainer = document.querySelector('.chat-container')
      const sidebar = document.querySelector('.sidebar')
      const reHeight = window.innerHeight - sidebar.offsetHeight
      if (window.innerWidth < 768) {
        userContainer.style.height = `${reHeight}px`
        chatContainer.style.height = `${reHeight}px`
      }
      if (window.innerWidth > 768) {
        userContainer.style.height = `100vh`
        chatContainer.style.height = `100vh`
      }
    }

    //捲動scrollbar到最底部
    chatMessageGroup.scrollTop = chatMessageGroup.scrollHeight
    //告知後端伺服器使用者進入
    socket.emit('online_user', {
      type: 'join',
      user: currentUser
    })
    //監聽來自後端伺服器發送使用者進入/離開
    socket.on('online_user', msgObj => {
      const cardGroup = document.querySelector('.card-group')

      if (msgObj.type === 'join') {
        cardGroup.innerHTML += `
        <div class="card user-id-${msgObj.user.id}">
          <div class="avatar-container">
            <a href="user/${msgObj.user.id}">
             <img class="avatar" src="${msgObj.user.avatar}" alt="">
            </a>
          </div>
          <div class="name-container">
            <a href="/user/${msgObj.user.id}" class="name">${msgObj.user.name}</a>
            <p class="account">@${msgObj.user.account}</p>
          </div>
          ${msgObj.user.id !== currentUser.id ?
            `
            <div class="chat-link">
              <a href="/message/private/${msgObj.user.id}">
                <i class="fa-solid fa-message"></i>
              </a>
            </div>
          `: ''
          }
        </div>
      `

        chatMessageGroup.innerHTML += `
       <div class="system_message type-user-joind">
         <p>${msgObj.user.name} 已加入聊天室</p>
       </div> 
      `
      }
      if (msgObj.type === 'leave') {
        document.querySelector(`.card.user-id-${msgObj.user.id}`).remove()
        chatMessageGroup.innerHTML += `
       <div class="system_message type-user-joind">
         <p>${msgObj.user.name} 已離開聊天室</p>
       </div> 
      `
      }
    })
    //公開聊天訊息發送至後端
    input.addEventListener('keyup', (e) => {
      if (e.key === 'Enter') {
        socket.emit('public_message', {
          user: currentUser,
          message: input.value
        })
        input.value = ''
      }
    });
    //接收後端公開聊天訊息
    socket.on('public_message', (msgObj) => {
      //判斷訊息是否是自己，如果是自己產生chat-message-right
      if (msgObj.user.id === currentUser.id) {
        chatMessageGroup.innerHTML += `
        <div class="chat-message-right">
          <div class="messages">
            <div class="message">
              ${msgObj.message}
            </div>
          </div>
        </div>
        `
        return chatMessageGroup.scrollTop = chatMessageGroup.scrollHeight
      }
      //判斷訊息發送者是否和上一個發送者相同，如果相同，訊息隱藏頭貼+姓名
      if (chatMessageGroup.lastElementChild) {
        if (chatMessageGroup.lastElementChild.classList.contains(`user-id-${msgObj.user.id}`)) {
          chatMessageGroup.innerHTML += `
        <div class="chat-message-left user-id-${msgObj.user.id}">
          <div class="avatar-container" style="visibility:hidden;height:0" >
            <img src="https://i.imgur.com/o1a4kLI.png" alt="">
          </div>
          <div class="messages">
            <div class="nameMessage">
              <div class="name" style="display:none;">
                user.name :
              </div>
              <div class="message">
                ${msgObj.message}
              </div>
            </div>
          </div>
        </div>
         `
          return chatMessageGroup.scrollTop = chatMessageGroup.scrollHeight
        }
      }
      //如果訊息來自於別的使用者，產生chat-message-left
      chatMessageGroup.innerHTML += `
        <div class="chat-message-left user-id-${msgObj.user.id}">
          <div class="avatar-container">
            <img src="${msgObj.user.avatar}" alt="">
          </div>
          <div class="messages">
            <div class="nameMessage">
              <div class="name" >
                ${msgObj.user.name}:
              </div>
              <div class="message">
                ${msgObj.message}
              </div>
            </div>
          </div>
        </div>
    `
      //捲動scrollbar到最底部
      chatMessageGroup.scrollTop = chatMessageGroup.scrollHeight
    })
    // 調整在768px之下main底下的元素高度
    reHeightMain()
    window.addEventListener('resize', reHeightMain)
    //監測使用者是否離開頁面
    window.addEventListener('beforeunload', () => {
      socket.emit('online_user', {
        type: 'leave',
        user: currentUser
      })
    })
  })()
</script>